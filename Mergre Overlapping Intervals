/*

    Merge Overlapping Intervals

*/

import java.io.*;
import java.util.*;

class Intervals{
    int start,end;
    Intervals(int start,int end){
        this.start=start;
        this.end=end;
    }
}

class Op{  
    
    LinkedList<Intervals> mergedInterval(Intervals[] intrvl){
        
        LinkedList<Intervals> list= new LinkedList<>();
        if(intrvl.length==0) return null;
        if(intrvl.length==1){
            list.add(intrvl[0]);
            return list;
        } 
        
        // Sorting Interval array by it's starting time
        Arrays.sort(intrvl,(Intervals a, Intervals b) -> a.start - b.start);
        
        Intervals first= intrvl[0];
        list.add(first);
        Intervals second;
        for(int i=1;i<intrvl.length;i++){
            second= intrvl[i];
            if(second.start <first.end){
                first= new Intervals(first.start,second.end);
                addToList(first,list);
            }
            else{
                first = second;
                list.add(first);
            }
        }
        return list;
    }
    
    private void addToList(Intervals first,LinkedList<Intervals> list ){
        if(list.getLast().start==first.start){
                list.removeLast();
                list.add(first);   
        }else{
                list.add(first);  
        }        
    }
    
}

class myCode
{
    public static void main (String[] args) throws java.lang.Exception
    {
        Intervals[] intrvl= new Intervals[6];
        intrvl[0] =new Intervals(2,4);
        intrvl[1] =new Intervals(10,18);
        intrvl[2] =new Intervals(3,5);
        intrvl[3] =new Intervals(8,12);
        intrvl[4] =new Intervals(1,3);
        intrvl[5] =new Intervals(25,30);
        
        Op op=new Op();
        // calling Merge Interval Method
        LinkedList<Intervals> list=op.mergedInterval(intrvl);
        
        // Print Interval
        if(list!=null){
            for(Intervals data: list)
                System.out.println(data.start+" "+data.end);
        }else
            System.out.println("null");
    }
    
    
}
